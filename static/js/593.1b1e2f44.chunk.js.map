{"version":3,"file":"static/js/593.1b1e2f44.chunk.js","mappings":"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","sources":["components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactsList/ContactsList.styled.js","redux/contacts-filter/selectors.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/PhoneBookForm/PhoneBookForm.styled.js","components/PhoneBookForm/PhoneBookForm.jsx","pages/Contacts.jsx","pages/pages.styled.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid #c3d1c0;\n  box-shadow: 3px 3px 8px -1px rgba(0, 0, 0, 0.5);\n  background-color: rgba(188, 237, 66, 0.5);\n`;\n\nexport const Name = styled.span`\n  font-weight: 500;\n  font-size: 18px;\n  color: #4b0d81;\n  margin: 8px 0;\n`;\n\nexport const Number = styled.span`\n  margin-bottom: 8px;\n`;\n\nexport const Button = styled.button`\n  background-color: #a665e0;\n  font-weight: 500;\n  font-size: 18px;\n  padding: 4px 20px;\n  width: 100px;\n  margin: 0 auto 10px;\n  transition: transform 300ms;\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Button, Div, Name, Number } from './Contact.styled';\nimport { deleteContact } from 'redux/contacts-filter/operations';\n\nconst Contact = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Div>\n      <Name>{name}</Name>\n      <Number>{number}</Number>\n      <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </Button>\n    </Div>\n  );\n};\n\nexport default Contact;\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0 20px 30px;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: space-evenly;\n`;\n\nexport const Item = styled.li`\n  width: 200px;\n  text-align: center;\n  margin-bottom: 10px;\n  font-size: 18px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\nexport const selectItems = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\n\nexport const selectFiltredNames = createSelector(\n  [selectItems, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n  }\n);\n","import Contact from 'components/Contact';\nimport { Item, List } from './ContactsList.styled';\nimport { useSelector } from 'react-redux';\nimport {\n  selectFiltredNames,\n  selectContacts,\n} from 'redux/contacts-filter/selectors';\n\nconst ContactsList = () => {\n  const filtredNames = useSelector(selectFiltredNames);\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <>\n      <List>\n        {filtredNames\n          ? filtredNames.map(contact => (\n              <Item key={contact.id}>\n                <Contact\n                  name={contact.name}\n                  number={contact.number}\n                  id={contact.id}\n                />\n              </Item>\n            ))\n          : contacts.map(contact => (\n              <Item key={contact.id}>\n                <Contact\n                  name={contact.name}\n                  number={contact.number}\n                  id={contact.id}\n                />\n              </Item>\n            ))}\n      </List>\n    </>\n  );\n};\n\nexport default ContactsList;\n","import styled from 'styled-components';\n\nexport const Cover = styled.div`\n  display: block;\n`;\n\nexport const Text = styled.p`\n  margin: 100px 0 15px 0;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  padding: 2px 6px;\n  font-size: 18px;\n  margin-bottom: 40px;\n  width: 150px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilteredValue } from 'redux/contacts-filter/filterSlice';\nimport { selectFilter } from 'redux/contacts-filter/selectors';\nimport { Cover, Input, Text } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilter);\n\n  const handleChange = evt => {\n    const filterName = evt.target.value.trim().toLowerCase();\n    dispatch(setFilteredValue(filterName));\n  };\n\n  return (\n    <Cover>\n      <Text>Find contact by name</Text>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleChange}\n        value={filterValue}\n      />\n    </Cover>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const Cover = styled.div`\n  display: block;\n`;\n\nexport const WholeForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  margin: 0 0 30px;\n`;\n\nexport const Text = styled.p`\n  margin: 100px 0 15px 0;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Input = styled(Field)`\n  padding: 2px 6px;\n  width: 150px;\n  margin-right: 20px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 60px;\n  height: 36px;\n  background-color: #a665e0;\n  font-weight: 500;\n  font-size: 18px;\n  transition: transform 300ms;\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const ErrorCover = styled.div`\n  color: red;\n  margin-top: 10px;\n  max-width: 150px;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport {\n  Button,\n  WholeForm,\n  Input,\n  ErrorCover,\n  Text,\n  Cover,\n} from './PhoneBookForm.styled';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts-filter/operations';\nimport { selectItems } from 'redux/contacts-filter/selectors';\n\nconst phoneCheck =\n  /^(([\\\\+]*[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{2,4}?[ \\\\-]*[0-9]{2,4}?$/;\n\nconst formSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Name is required'),\n\n  number: Yup.string()\n    .matches(\n      phoneCheck,\n      'Phone number must be min 4 digits. Can contain spaces, dashes and start with +'\n    )\n    .required('Phone number is required'),\n});\n\nconst PhoneBookForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectItems);\n\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    const haveName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (haveName) {\n      alert(`${name} is already in the contact list`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n\n    resetForm();\n  };\n\n  return (\n    <Cover>\n      <Text>Add contact</Text>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={formSchema}\n        onSubmit={handleSubmit}\n      >\n        <WholeForm>\n          <div>\n            <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n            <ErrorMessage name=\"name\" component={ErrorCover} />\n          </div>\n          <div>\n            <Input type=\"tel\" name=\"number\" placeholder=\"Number\" />\n            <ErrorMessage name=\"number\" component={ErrorCover} />\n          </div>\n          <Button type=\"submit\">Add</Button>\n        </WholeForm>\n      </Formik>\n    </Cover>\n  );\n};\n\nexport default PhoneBookForm;\n","import ContactsList from 'components/ContactsList';\nimport Filter from 'components/Filter';\nimport PhoneBookForm from 'components/PhoneBookForm';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts-filter/operations';\nimport { selectContacts } from 'redux/contacts-filter/selectors';\nimport { Cover, Text } from './pages.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const { items, isLoading, error } = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Cover>\n        <PhoneBookForm />\n        <Filter />\n      </Cover>\n\n      {isLoading && !error && <Text>Loading contacts...</Text>}\n      {error && <Text>{error}</Text>}\n      {items.length > 0 ? (\n        <ContactsList />\n      ) : (\n        <Text>You didn't add any contacts yet</Text>\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const H1 = styled.p`\n  margin: 150px 0 20px;\n  text-align: center;\n  color: #4b0d81;\n  font-size: 36px;\n  font-weight: 700;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  font-size: 36px;\n  font-weight: 700;\n  color: blue;\n`;\n\nexport const Span = styled.span`\n  font-size: 32px;\n  color: #4b0d81;\n  font-weight: 700;\n`;\n\nexport const Div = styled.div`\n  text-align: center;\n`;\n\nexport const Title = styled.h1`\n  font-size: 36px;\n  color: #4b0d81;\n  text-align: center;\n`;\n\nexport const Cover = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n  color: #4b0d81;\n  font-weight: 500;\n  text-align: center;\n`;\n"],"names":["Div","styled","Name","Number","Button","name","number","id","dispatch","useDispatch","type","onClick","deleteContact","List","Item","selectContacts","state","contacts","selectItems","items","selectFilter","filter","selectFiltredNames","createSelector","toLowerCase","includes","filtredNames","useSelector","map","contact","Cover","Text","Input","filterValue","onChange","evt","filterName","target","value","trim","setFilteredValue","WholeForm","Form","Field","ErrorCover","formSchema","Yup","shape","min","max","required","matches","initialValues","validationSchema","onSubmit","resetForm","find","alert","addContact","placeholder","component","Contacts","isLoading","error","useEffect","fetchContacts","length","H1","StyledNavLink","NavLink","Span"],"sourceRoot":""}